#include <iostream>
#include <list>
#include <vector>
#include <map>
#include <algorithm>
#include <ranges>
#include <coroutine>
#include "MyCoroutine.h"
#include <random>
#include <time.h>
#include <cstdlib>
#include <string>
using namespace std;


int main()
{
    /*
    *   ①	병원 시스템의 환자는 병원을 이용하는 모든 사람으로 정의하며, 병원 등록 과정에서 필수적으로 환자 이름, 연락처, 주소를 입력해야 한다.
        ②	환자 ID는 환자가 병원에 처음 등록될 때 부여받고, 이후 모든 기록에서 동일한 환자 ID를 참조한다.
        ③	환자는 환자 ID로 식별된다.
        ④	환자는 첫 진단 과정에서 진단된 질병 ID를 연결할 수 있다.
        ⑤   질병은 고유한 질병 ID을 가지며, 질병 명, 완치율, 사망률이 기입되어 있다.
        ⑥   환자에게는 환자 ID, 담당 의사 ID, 담당 간호사 ID, 질병 ID가 부여된다.
        ⑦	담당 의사 ID가 널 값이라면, 담당 간호사 ID가 2개 이상 부여되어야 한다.
        ⑧	의사는 의사 ID로 식별된다.
        ⑨	의사는 의사 ID, 이름, 전문 분야, 연락처, 소속 부서 정보를 유지한다.
        ⑩	환자가 입원하면 입원 기록에 대해 환자 ID, 담당 간호사 ID, 병실 번호, 입원 날짜, 퇴원 날짜 정보를 유지해야 한다.
            퇴원 날짜에는 널 값이 가능하며 값의 유효성에 따라 퇴원 날짜 입력 여부가 결정된다.
            각 입원 건은 환자 ID로 식별된다.
            간호사에 대한 간호사 ID, 이름, 근무 교대, 연락처, 소속 부서 정보를 유지한다.
            간호사는 간호사 ID로 식별된다.
            한 간호사는 여러 환자의 입원을 관리할 수 있다.
            한 환자는 여러 간호사로부터 관리될 수 있다.
            수술에는 환자 ID, 담당 의사 ID, 담당 간호사 ID, 수술 날짜, 수술 유형, 수술 결과 정보를 유지해야 한다.
            수술 결과에는 널 값이 가능하며 값의 유효성에 따라 수술 결과 입력 여부가 결정된다.
            각 수술 건은 환자 ID와 담당 의사 ID로 식별된다.
            한 환자는 여러명의 의사에게 수술을 받을 수 있다.
            한 의사는 여러명의 환자를 수술 할 수 있다.
            의사와 간호사가 환자를 담당하기 위해 담당 의사 ID, 담당 간호사 ID, 환자 ID, 담당 시작일, 담당 종료일 정보를 유지해야 한다.
            담당 종료일에는 널 값이 가능하며 값의 유효성에 따라 담당 종료일 입력 여부가 결정된다.
            각 수술 건은 담당 의사 ID, 담당 간호사 ID로 식별된다.
            한 의사는 여러 명의 환자를 담당할 수 있다.
            한 환자는 여러 명의 의사에게 담당될 수 있다.
            한 간호사는 여러 명의 환자를 담당할 수 있다.
            한 환자는 여러 명의 간호사에게 담당될 수 있다.

        
    * 
    * 의사는 등록을 하려면 의사 ID, 이름, 전문 분야, 연락처, 이메일 주소, 근무 시간을 입력해야 한다.
    * 의사는 의사 ID로 식별한다.
    * 간호사는 등록을 하려면 간호사 ID, 이름, 근무 파트(주간, 야간), 연락처, 이메일 주소를 입력해야 한다.
    * 간호사는 간호사 ID로 식별한다.
    * 환자는 등록을 하려면 환자 ID, 이름, 생년월일, 성별, 연락처, 질병 명을 입력해야 한다.
    * 환자는 환자 ID로 식별한다.
    * 질병에 대한 질병 명, 전문 분야, 완치율, 사망률의 정보를 유지해야 한다.
    * 질병은 질병 명으로 식별한다.
    * 
    */





    return 0;

}